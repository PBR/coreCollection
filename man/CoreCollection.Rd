% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coreCollection.R
\name{CoreCollection}
\alias{CoreCollection}
\title{The CoreCollection class}
\usage{
CoreCollection(distanceMatrix, n, preselected = c(),
  coreSelectMethod = "A-NE", adjustedGroupMethod = "split",
  algorithm = "randomDescent", seed = NULL)
}
\arguments{
\item{distanceMatrix}{a distance matrix; can be either a \link[=matrix]{matrix} or a \link[stats:dist]{dist}}

\item{n}{the number of items in the core}

\item{preselected}{an optional list of preselected accessions to be included in the core collection;
the provided accessions should occur in the labels or rownames of the provided distanceMatrix}

\item{coreSelectMethod}{The method for \link[coreCollection:computeCore]{computing} core accessions within the groups:
\code{A-NE} (accession nearest entry), \code{E-NE} (entry nearest entry) or \code{E-E} (entry entry)}

\item{adjustedGroupMethod}{The method to handle adjusting groups when multiple preselected accessions occur within a single group:
\code{split} to just split the initial groups with multiple accessions or \code{recompute} to recompute the division of
accessions over the groups.}

\item{algorithm}{algorithm applied to \link[coreCollection:computeCore]{compute} a solution: currently, only \code{randomDescent} is available}

\item{seed}{The seed used when generating the core collection. If no seed is provided, a random
seed is chosen and each time the \code{recompute()} method is called on the object, a new seed will be used.}
}
\description{
R6 class for creating a core collection.
}
\section{Fields}{

\describe{
\item{\code{adjustedBasedGroups}}{A list describing the initial random division of all accessions into groups, adjusted for the
set of \code{preselected} accessions using the defined \code{adjustedGroupMethod}.}

\item{\code{adjustedGroupMethod}}{The method to handle adjusting groups when multiple preselected accessions occur within a single group.}

\item{\code{algorithm}}{The applied algorithm to compute the solution.}

\item{\code{core}}{A \link[=data.frame]{data.frame} representing the core collection with the accession names as labels and in the first and only column a boolean value indicating whether or not the accession was preselected.}

\item{\code{coreSelectMethod}}{The applied method to select the core accessions based on the computed \code{adjustedBasedGroups}.}

\item{\code{distanceMatrix}}{The distance matrix; this will allways be a \link[stats:dist]{dist} object.}

\item{\code{measure}}{The measure used in the defined \code{method} to compute the core collection.}

\item{\code{measures}}{A \link[=data.frame]{data.frame} with the available \code{methods} as labels and in the first and only column the measures for these methods.}

\item{\code{n}}{The required core size}

\item{\code{pop}}{todo}

\item{\code{preselected}}{The list of preselected accessions.}

\item{\code{randomBasedGroups}}{todo}

\item{\code{randomSelected}}{todo}

\item{\code{seed}}{The last applied seed for the randomizer. This will only change when the \code{recompute()} method
is called and no initial \code{seed} is defined.}
}}

\section{Slots}{

\describe{
\item{\code{adjustedSelected}}{todo}
}}

\section{Methods}{

\describe{
  \item{\code{alternativeCore(n)}}{The \code{n}th alternative core with \code{n} a positive integer. Provides for each non-preselected accession in the core, if available, the \code{n}th nearest accession from within the same group as an alternative.}
  \item{\code{clone(deep = FALSE)}}{The default \link{R6Class} clone method.}
  \item{\code{initialize()}}{Initialisation of the object, is called automatically on creation or recomputing.}
  \item{\code{recompute()}}{Recompute the core collection: If on initialisation of the object a seed was provided, this same seed will be applied and therefore the same core collection will be created. Otherwise, a new seed is generated, resulting in a new core.}
  \item{\code{print()}}{Create a summary of the core collection object, same as \code{summary()}.}
  \item{\code{summary()}}{Create a summary of the core collection object, same as \code{print()}.}
}
}

\examples{
# Get a vcf-file
library(vcfR)
vcfFile <- tempfile()
vcfFileSource <- paste0(
  "ftp://ftp-trace.ncbi.nih.gov/",
  "1000genomes/ftp/pilot_data/release/2010_07",
  "/exon/snps/CEU.exon.2010_03.genotypes.vcf.gz")
download.file(vcfFileSource, vcfFile)
vcf <- read.vcfR(vcfFile)
file.remove(vcfFile)

# Create a distance object
gl <- vcfR2genlight(vcf)
dist <- dist(gl)

# Create a Core Collection
n = 10
cc <- CoreCollection(dist, n)
cc$core

# Create a Core Collection with preselected accessions
preselected = sample(labels(dist), 5)
ccp <- CoreCollection(dist, n, preselected)
preselected
ccp$core

# # Visualize the Core Collection
# library(ggfortify)
# data = setNames(data.frame(matrix(ncol=2,nrow=attr(dist,"Size"))), c("core","preselected"))
# data$core <- labels(dist) \%in\% rownames(ccp$core)
# data$preselected <- labels(dist) \%in\% preselected
# autoplot(prcomp(dist), data=data, colour="core", shape="preselected")
}
\seealso{
Other core collection: \code{\link{coreCollection-package}}
}
\concept{core collection}
